{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","userId","usersFromServer","find","App","useState","selectPersonName","setselectPersonName","setTitle","listTodos","setListTodos","action","method","onSubmit","event","preventDefault","selectedUser","newTodo","length","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63ec64e0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n\n  <article\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","import './App.scss';\n\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectPersonName, setselectPersonName] = useState('');\n  const [title, setTitle] = useState('');\n  const [listTodos, setListTodos] = useState(todos);\n\n  const sendForm = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const selectedUser = usersFromServer.find(\n      user => user.name === selectPersonName,\n    );\n\n    if (!selectedUser) {\n      return;\n    }\n\n    const newTodo = {\n      id: todos.length + 1,\n      title,\n      completed: false,\n      userId: selectedUser.id,\n      user: selectedUser,\n    };\n\n    setListTodos([...listTodos, newTodo]);\n  };\n\n  // const selectInput = (event: FormEventHandler<HTMLOptionElement>) => {\n  //   setselectPersonName(event.target.value);\n  // };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={sendForm}>\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInput}\n            />\n          </label>\n          {!title && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={selectPersonName}\n              onChange={(event) => setselectPersonName(event.target.value)}\n            >\n              <option value=\"\" disabled>Choose a user:</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <span className=\"error\">Please choose a user</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={listTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}